[SOURCE_URL]: https://user.netmera.com/netmera-developer-guide/platforms/flutter/changelog
Platforms
Flutter
Changelog
Latest version details may also be found here:
v2.8.0
August 4, 2025
Improvements
nmcore
to version
4.6.1
3.27.0
v2.7.0
July 21, 2025
Improvements
nmcore v4.6.0
nmfcm v4.5.0
Integrated
nmhms v4.5.0
Integrated
iOS
v2.6.0
June 19, 2025
Features
updateUserAsync()
method is added.
v2.5.4
May 16, 2025
üõ†Ô∏è Bugfixes
Resolved Push Delivery Issue for Custom Firebase Setups
Fixed a problem where push notifications could not be received by customers using a custom Firebase integration.
Prevented Duplicate Requests on Initial Launch (Android)
Resolved an issue where API requests were being triggered multiple times during the initial launch of the application on Android. This issue has been fixed with
v2.5.3
April 28, 2025
Improvements
nmcore
to version
4.3.0.
nmfcm
to version
4.0.2.
nmhms
to version
4.0.1.
üõ†Ô∏è Bugfixes
A fix has been developed to address the
ensureInitializationComplete
crash.
v2.5.2
April 10, 2025
Improvements
DateTime
Event Attribute Improvement
Improved handling of
DateTime
-type event attributes: these are now automatically converted to timestamps for consistency and better platform compatibility.
v2.5.1
April 2, 2025
Improvements
Upgraded
to version
3.25.0
Upgraded
to version
4.0.10
Made compatible with
Flutter 3.29.x
versions.
v2.5.0
February 3, 2025
Improvements
Upgraded
to version
3.24.9
Upgraded
to version
4.0.7
Features
Implemented
SSL pinning
for enhanced security.
Added
checkNotificationPermission
method to verify notification permissions programmatically.
v2.4.6
December 23, 2024
Improvements
upgraded from 3.23.16 to
3.24.1
Android nmcore
updated from 3.14.4 to
3.15.3
Android nmfcm
Android nmhms
updated to
3.12.1
v2.4.5
November 18, 2024
Improvements
iOS Push Callback Update:
Updated iOS push callbacks to prevent them from triggering on push notifications from other providers.
v2.4.4
October 24, 2024
Improvements
üõ†Ô∏è Bugfixes
Resolved an issue where the category list passed as a parameter to the
getInboxCountForStatus
method was not being sent to the backend.
v2.4.3
August 6, 2024
v2.4.2
July 30, 2024
Improvements
Upgraded to version 3.23.11.
Upgraded nmcore to version 3.14.2.
Integration Changes:
Podfile Update:
Ensure that the Netmera pods in your Podfile are updated to version 3.23.11.
v2.4.1
June 25, 2024
Improvements
Updated to version 3.23.6
Updated to version 3.14.0
Attention: Critical Update for Android Users
Fixed Android Gradle 8+ Release Build Issue:
v2.4.0
February 26, 2024
Added iOS 3.22.0 package.
Improvements
Integrated Android Core and FCM versions 3.12.0, which support the transition to FCM HTTP v1.
üõ†Ô∏è Bugfixes
Addressed an issue where building with Android Gradle 8 was causing problems.
v2.3.7
January 24, 2024
Improvements
Integration of widget callback.
v2.3.6
January 9, 2024
Android Core 3.11.4 was added to this version. To integrate the latest versions, update your dependencies as follows:
implementation 'com.netmera:nmcore:3.11.4'
implementation 'com.netmera:nmfcm:3.11.0'
implementation 'com.netmera:nmhms:3.11.0'
üõ†Ô∏è Bugfixes
In the user update callback, the response was sometimes returned as null. This has been addressed, and error responses will now provide more detailed information.
v2.3.5
December 11, 2023
üõ†Ô∏è Bugfixes
Resolved an issue with Android synchronous user updates.
v2.3.4
December 5, 2023
Added Android core 3.11.1 and HMS 3.11.0 packages.
Added iOS 3.21.0 package.
Improvements
User Update Method Details
Example Usage in Dart Code:
// User update sync
Netmera.updateUser(user).then((value) {
print('User updated');
}).catchError((error) {
print('User update failed: $error');
});
v2.3.2
October 31, 2023
Android 3.10.4 and iOS 3.18.0 versions have been added.
Features
The
fetchCoupon
üõ†Ô∏è Bugfixes
The Android
baseUrl
crash issue has been resolved.
v2.3.1
September 20, 2023
Improvements
The Target API level of the Android module has been raised to 33.
The
'startDataTransfer'
and
'stopDataTransfer'
methods have been added to the plugin.
v2.3.0
Improvements
Flutter version 2.3.0, which includes Android 3.10.1 and iOS 3.16.0 versions, has been released.
v2.2.0
Improvements
Push action callbacks were moved in foreground thread.
Callback Details
It appears that you have callback methods in your application, where the developer can provide their own custom methods to be executed. These callback methods allow you to receive specific information or perform certain actions requested from Netmera. For example, you can receive push payloads through these callbacks.
In Flutter, there is a problem where callbacks cannot run in the background as the application kills the cross-compiled code to preserve resources. To avoid this issue, you can utilize the "isolate" feature to run the existing callback methods in a separate thread. However, it's important to note that since these callbacks are running in a background thread, they cannot perform long-running tasks or have persistent operations. Once the task in the thread is completed, the thread terminates. This behavior is due to the nature of different threads operating independently. The methods have been moved to the foreground.
onPushReceiveBackground callback was created for background messages.
Only the
onPushReceiverBackground
handling process is performed in the background.
üõ†Ô∏è Bugfixes
Flutter iOS event channel issue was fixed.
Push action callbacks context issue was fixed.
INTEGRATION
iOS
The section below from the AppDelegate should be removed.
func registerPlugins(registry: FlutterPluginRegistry) {
GeneratedPluginRegistrant.register(with: registry)
The following line should be removed from the AppDelegate ‚Üí didFinishLaunchingWithOptions method.
NetmeraFlutterSdkPlugin.setPluginRegistrantCallback(registerPlugins)
The inside of the AppDelegate ‚Üí didReceiveRemoteNotification method should be changed as follows.
~~FNetmeraService.handleWork(ON_PUSH_RECEIVE, dict:["userInfo" : userInfo])~~
if UIApplication.shared.applicationState == .active {
FNetmeraService.handleWork(ON_PUSH_RECEIVE, dict:["userInfo" : userInfo])
} else {
Android
There is no change in Android integration.
Dart
The
NetmeraPushBroadcastReceiver().initialize()
method in the main.dart file can now be called anywhere.
In order for background messages to be processed, the following method must be added first, outside the
main
MyApp
blocks.
@pragma('vm:entry-point')
void _onPushReceiveBackgroundHandler(Map<dynamic, dynamic> bundle) async {
print("onPushReceiveBackground: $bundle");
Then this function should be given to
onPushReceiveBackground
main
before the
runApp
method as follows.
NetmeraPushBroadcastReceiver.onPushReceiveBackground(_onPushReceiveBackgroundHandler);
For more detailed information, you can see the example usage in the example project.
https://github.com/Netmera/Netmera-Flutter-Example/tree/master
v2.1.15
Features
üõ†Ô∏è Bugfixes
Decryption failed issue was fixed. (VF crash fixed.)
v2.1.14
Features
areNotificationsEnabled
and
requestPushNotificationAuthorization
methods can now be used for both iOS and Android devices.
Push Notification Permissions
If you don't request notification permission at runtime, you can request it by calling the
requestPushNotificationAuthorization()
method. Note: Notification runtime permissions are required on Android 13 (API 33) or higher. Therefore, before calling the method, make sure your project targets an API of 33 and above.
Netmera.requestPushNotificationAuthorization();
You can call the
areNotificationsEnabled()
method if you need to know the status of permissions.
Netmera.areNotificationsEnabled().then((enabled) {
// Use the enabled status of permission as boolean
});
Usage details of
areNotificationsEnabled
and
requestPushNotificationAuthorization
methods have been added to the Readme file.
SSL Pinning
Cordova
7 days ago