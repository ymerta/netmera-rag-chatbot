Tagless Tracking for Smarter Data Collection
Netmera Tagless Data Capture automatically detects and collects screen views and user interaction events—without requiring any manual tagging or custom development effort. It provides a faster, low-code way to collect behavioral data, helping product teams and marketers optimize experiences with real-time insights.
Currently available in iOS and Android SDKs. Cross-platform SDKs such as Flutter and React Native are not yet supported.

Screen Tracking Dashboard
Path: Settings > Screen Tracking > Views / Actions
This dashboard is your control center for screen and action mapping.
Sections:
Track Views / Track Actions:
Displays current screen and interaction events that have already been mapped and published.
Unmapped Views / Actions:
Shows user actions detected on your test devices that are not yet linked to defined events. These will need to be manually named and published.

Step 1: Enable Tracking
Path: Settings > Screen Tracking > Track Views / Track Actions / Collect Values

Turn on Track Views, Track Actions and Collect Values on their respective pages to start collecting data.
What Each Toggle Does
Track Views:
Enables the collection of full-screen transitions such as Home Page, Product Page, Cart, etc. This helps you understand which pages users are navigating to.
Track Actions:
Captures user interactions with the interface, such as taps, clicks, or selections on specific elements. Useful for analyzing feature usage and engagement.
Collect Values:
Extends action tracking by capturing the specific value of the item clicked or interacted with.
For example, if a user taps a product titled "Blue Sneakers" at the end of a path like /category/shoes, this toggle ensures that "Blue Sneakers" is included in the data payload.
This allows you to not only track which action was triggered but also what the user selected or interacted with.

Step 2: Add Test Devices
Path: Settings > Test Devices > Invite Tester / Add Tester
To begin collecting screen views and user interaction events, you must first register test devices. These devices are used to simulate app usage in a controlled environment so that Netmera can detect and log potential screen and action events for mapping. Refer to Test Devices for further information.
Precondition:
Set your iOS URL Schema and Android Package Name under Developers > App Info.
Step 3: Simulate Flows with Test Devices
Once your test device is registered, interact with your application to simulate user flows. Netmera Tagless Data Capture will automatically generate candidate event paths based on your actions—no manual coding required.
Views Example:
"Home" → "Product List" → "Product Detail" → "Cart"
This captures the sequential screen transitions as a user navigates through your app.
Actions Example:
"Tap Search" → "Select Filter" → "Tap Add to Favorites"
These represent individual user interactions with buttons or interactive elements.
Values Example:
"Tap Product: Running Shoes" → "Tap Color Option: Red" → "Tap Size: 42"
The Collect Values feature appends contextual details—such as the name, label, or value of the item clicked—at the end of the action path.
These automatically generated candidate paths can later be reviewed, named, and published for consistent tracking across your application.
Step 4: Create and Save Mappings
Navigate to:Unmapped Views or Unmapped Actions under the Tagless Data Collection section.
Click “Create New” to open the mapping editor for the selected view or action.
Assign a Screen Name:
Enter a meaningful and consistent name that reflects the purpose of the screen (e.g., ProductDetail, OnboardingStep1).
Choose Tracking Option:
Use the Track toggle/button to decide whether this mapping should be actively tracked. This allows you to save mappings without enabling them immediately if needed.
Match Android and iOS Paths (Optional but Recommended):
Netmera allows you to group equivalent screen views or actions across platforms into a single mapping. Use the Add button in the Mappings table to attach a corresponding path from the other platform (e.g., match the Android product/detail screen with the iOS productDetailsView). This ensures consistency in reporting and simplifies cross-platform analytics.
Finalize and Save:
Once both platforms (if applicable) are matched, click the green Add button to save your mapping.
Publish the Changes:
After saving, return to the Views / Actions dashboard and click the “Publish” button.
Publishing is required to activate the mappings—otherwise, they remain in draft and will not be applied.

Step 5: Screen your Data with User Path
Path: Analytics > User Path
User Path Analytics allows you to preview flow efficiency, drop-offs, and repetitive actions using data from your test sessions.
Filter Options:
Segment: Analyze specific user groups (e.g., VIPs, new users)
Device: Filter by operating system or device version
Filter: Choose a specific screen or action
Direction: See what precedes or follows a selected event
Date Range: Observe behavior trends over time

EventType: Show View Test Event
Description: Fired when a screen is shown on test devices only.
Notes: Not visible in production.

EventType: Show View Event
Description: Triggered when a mapped screen is viewed.
Notes: Live tracking for analytics.

EventType: View Action Test Event
Description: Triggered when an action is taken on a test device.
Notes: Used during test flow creation.

EventType: View Action Event
Description: Triggered when a mapped interaction occurs.
Notes: Visible in analytics and segmentation.

Issue: Can’t See Track Views/Actions Pages
Solution: Ask your Success Manager to enable permissions.

Issue: No Data Collected from Test Device
Solution: Confirm that the device is registered and actively used.

Issue: Mapping Doesn’t Appear in Dashboard
Solution: Ensure you clicked “Add” after matching and then “Publish”.

Issue: User Path Shows No Events
Solution: Check if test events were generated and mapped properly.

Issue: Session Expiry Issues
Solution: Update Session Expiration Interval in Developers > App Info.